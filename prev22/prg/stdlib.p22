###########################
# Linked standard library #
#   by Andraž Andolšek    #
###########################

fun printf1(format : ^char, arg : ^void) : void = printfn(format, ^arg)
fun printf4(format : ^char, a0 : ^void, a1 : ^void, a2 : ^void, a3 : ^void) : void = {
	args[0] = a0;
	args[1] = a1;
	args[2] = a2;
	args[3] = a3;
	printfn(format, ^args[0]);
} where {
	var args : [4]^void
}
fun printfn(format : ^char, args : ^^void) : void = {
	while { c = format^; c != (0 : char); } do {
		if c == '%' then {
			format = ((format : int) + 8 : ^char);
			c = format^;
			if c == 'd' then putInt((args^ : int))
			else if c == 's' then printfn((args^ : ^char), (nil : ^^void))
			else if c == 'b' then {
				if (args^ : ^bool)^ then putChar('T')
				else putChar('F');
			}
			else {
				putChar('%');
				format = ((format : int) - 8 : ^char);
				args = ((args : int) - 8 : ^^void);
			};
			args = ((args : int) + 8 : ^^void);
		} else if c == '\' then {
			format = ((format : int) + 8 : ^char);
			c = format^;
			if c == 'n' then putChar((10 : char))
			else if c == 't' then putChar((9 : char))
			else if c == (0 : char) then format = ((format : int) - 8 : ^char)
			else {
				putChar('\');
				putChar(c);
			};
		} else {
			putChar(c);
		};
		format = ((format : int) + 8 : ^char);
	};
} where {
	var c : char
}
fun parseInt(s : ^char) : int = {
	ret = 0;
	if s^ == '-'
	then {
		s = ((s : int) + 8 : ^char);
		sgn = -1;
	}
	else sgn = 1;
	while s^ >= '0' & s^ <= '9' do {
		ret = ret * 10 + (s^ : int) - ('0' : int);
		s = ((s : int) + 8 : ^char);
	};
	ret * sgn;
} where {
	var ret : int
	var sgn : int
}
fun getString(s : ^[100]char) : int = {
	count = 0;
	c = getChar();
	while count < 100 & (c : int) >= 32 & (c : int) <= 126 do {
		s^[count] = c;
		count = count + 1;
		c = getChar();
	};
	s^[count] = (0 : char);
	count;
} where {
	var c : char
	var count : int
}
fun putInt(x : int) : void = {
	if x < 0
	then {
		x = -x;
		putChar('-');
	}
	else none;
	if x/10 > 0
	then putInt(x/10)
	else none;
	putChar((x%10 + ('0': int) : char));
}

# Extra shit
fun putChar(c : char) : void
fun getChar() : char
fun toChar(i : int) : char = ((('0' : int) + i) : char)
fun toInt(c : char) : int = (c : int)
fun toIntVal(c : char) : int = ((c : int) - ('0' : int))
fun nl() : char = (10 : char)
